function [u w v] = perrin_gsvd(Emeas,Einterp,morder,lambda)% function [u w v] = perrin_gsvd(Emeas,Einterp,morder,lambda)% Performs spherical spline interpolation a la Perrin 1981% T Ferree% Created 2/23/2006% Last revised 11/12/2007% normalize to unit direction vectorsNmeas=size(Emeas,1); for i=1:Nmeas	m=mag(Emeas(i,:));	Emeas(i,:)=Emeas(i,:)/m;endNinterp=size(Einterp,1);for i=1:Ninterp	m=mag(Einterp(i,:));	Einterp(i,:)=Einterp(i,:)/m;end% construct G and A from EmeasG=zeros(Nmeas+1,Nmeas+1); A=zeros(Nmeas+1,Nmeas+1); for i=1:Nmeas	for j=1:Nmeas	xij=dot(Emeas(i,:),Emeas(j,:));    G(i,j)=g_perrin(morder,xij);    A(i,j)=G(i,j);	endendA(Nmeas+1,:)=1.0;A(:,Nmeas+1)=1.0;A(Nmeas+1,Nmeas+1)=0.0;% regularize to Nmeas onlyfor i = 1:Nmeas	A(i,i)=A(i,i)+lambda;endcondA=cond(A);rankA=rank(A);if rankA ~= (Nmeas + 1)    error('Interpolation matrix A not full rank.')end% SVD[u ww v]=svd(A);w=zeros(Nmeas+1,1);for i=1:Nmeas+1	w(i)=ww(i,i);end